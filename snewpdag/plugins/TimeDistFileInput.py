""""
TimeDistFileInput:  plugin which reads a time distribution from a file as input.

JSON input fields:
  'action':  'alert' -> read named file, attach to data, and notify
  'filename':  input file name
  'filetype':  'tn' -> tab-delimited csv file of time (low edge of bin), number of events

JSON output additions:
  't':  low edges of time bins (array of floats)
  'n':  number of events in corresponding time bins (array of floats)

This should be able to read a file generated by SNEWS/lightcurve_match/simulation/detectorrate
"""
import logging
import csv

from snewpdag.dag import Node

class TimeDistFileInput(Node):
  def __init__(self, **kwargs):
    super().__init__(**kwargs)

  def update(self, data):
    if 'action' in data:
      if data['action'] == 'alert':
        if 'filename' in data:
          if 'filetype' in data:
            if data['filetype'] == 'tn':
              tt, nn = self.read_tn(data['filename'])
            else:
              logging.error('[{}] Unrecognized file type {}'.format(self.name, data['filetype']))
              return
          else:
            tt, nn = self.read_tn(data['filename'])
          data['t'] = tt
          data['n'] = nn
          self.notify(data['action'], None, data)
        else:
          logging.error('[{}] Missing filename'.format(self.name))
          return
      else:
        self.notify(data['action'], None, data)
    else:
      logging.error('[{}] Expected action field not found'.format(self.name))

  def read_tn(self, name):
    tt = []
    nn = []
    with open(name, newline='') as csvfile:
      reader = csv.reader(csvfile, delimiter='\t')
      for row in reader:
        tt.append(float(row[0]))
        nn.append(float(row[1]))
    return tt,nn

