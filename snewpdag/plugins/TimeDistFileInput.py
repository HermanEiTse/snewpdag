""""
TimeDistFileInput:  plugin which reads a time distribution from a file as input.

JSON input fields:
  'action':  'alert' -> read named file, attach to data, and notify
  'filename':  input file name
  'filetype':  'tn' -> tab-delimited csv file of time (low edge of bin), number of events

JSON output additions:
  't_low':  low edges of time bins (array of floats)
  't_bins':  number of events in corresponding time bins (array of floats)
Note that the last value of t_low has to be used as t_high,
which discards the last entry in t_bins

This should be able to read a file generated by SNEWS/lightcurve_match/simulation/detectorrate
"""
import logging
import csv
import numpy as np

from snewpdag.dag import Node

class TimeDistFileInput(Node):
  def __init__(self, **kwargs):
    super().__init__(**kwargs)

  def alert(self, data):
    if 'filename' in data:
      if 'filetype' in data:
        if data['filetype'] == 'tn':
          tt, nn = self.read_tn(data['filename'])
        else:
          logging.error('[{}] Unrecognized file type {}'.format(
                        self.name, data['filetype']))
          return False
      else:
        tt, nn = self.read_tn(data['filename'])
      data['t_low'] = np.array(tt[:-1])
      data['t_low'].flags.writeable = False
      data['t_high'] = tt[-1]
      data['t_bins'] = np.array(nn[:-1])
      data['t_bins'].flags.writeable = False
      return True
    else:
      logging.error('[{}] Missing filename'.format(self.name))
      return False

  def read_tn(self, name):
    tt = []
    nn = []
    with open(name, newline='') as csvfile:
      reader = csv.reader(csvfile, delimiter='\t')
      for row in reader:
        tt.append(float(row[0]))
        nn.append(float(row[1]))
    return tt,nn

